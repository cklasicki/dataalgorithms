Task0

    Both cases (find first and find last) are O(1). It does not matter how many items we have in the array. We access only one specific item and that's why the timce complexity is constant.

Task1

    I am iterating over the full set of calls and texts. 
    As a data structure in which data is stored, I used set which has O(1) time complexity. 
    Therefere the time complexity is O(n), because there is one for loop that depends on the number of items in the provided input

Task2

    One iteration over calls object to add all numbers and their duration (aggregate in an addtional dictionary object number -> duration). 
    Then another iteration over this newly created dict structure to find max.
    Time complexity O(n), space complexity O(n) the more numbers, the more space taken.

Task3

    PartA:
        Creation of additional data structure that holds information about bangalor numbers is O(n). 
        The chosed data strucutre is set, because it has add method with O(1) time complexity.
        At the end the output is sorted with the O(nlogn) time complexity. Therefore the overall time complexity would be O(nlogn).

    PartB:
        There is a list build with worst case n numbers that then is iterated, but not nested.
        Therefore the time complexity is O(n).

Task4

    Time complexity of the for loop is O(n) but then after for loop there is a sorted build-in method used which has O(nlogn) time complexity.
    Therefore the overall time complexity would be O(nlogn).